source('D:/11 DATA ANALYTICS/89 MIT_TheAnalyticsEdge/99 Kaggle_Competition/MIT_TheAnalyticsEdge/31-Models/07_Full_Impute_Boruta_Features/AutoModel_V1.R')
dfTrain <- read.csv("../../21-Imputed-Data/Training_Imputed_FULL2.csv")
summary(dfTrain)
source('D:/11 DATA ANALYTICS/89 MIT_TheAnalyticsEdge/99 Kaggle_Competition/MIT_TheAnalyticsEdge/31-Models/07_Full_Impute_Boruta_Features/AutoModel_V1.R')
source('D:/11 DATA ANALYTICS/89 MIT_TheAnalyticsEdge/99 Kaggle_Competition/MIT_TheAnalyticsEdge/31-Models/07_Full_Impute_Boruta_Features/AutoModel_V1.R')
AutoModel(dfTrain, 100)
View(dfOutput)
rfModel <- randomForest(Party ~., data  dfTrain)
rfModel <- randomForest(Party ~., data =dfTrain)
pred <- predict(rfModel)
pred <- predict(rfModel, "prob")
pred <- predict(rfModel, type = "prob")
class(pred)
pred
head(pred)
pred <- predict(rfModel, type = "response")
source('D:/11 DATA ANALYTICS/89 MIT_TheAnalyticsEdge/99 Kaggle_Competition/MIT_TheAnalyticsEdge/31-Models/07_Full_Impute_Boruta_Features/AutoModel_V1.R')
source('D:/11 DATA ANALYTICS/89 MIT_TheAnalyticsEdge/99 Kaggle_Competition/MIT_TheAnalyticsEdge/31-Models/07_Full_Impute_Boruta_Features/AutoModel_V1.R')
AutoModel(dfTrain, 100)
debugSource('D:/11 DATA ANALYTICS/89 MIT_TheAnalyticsEdge/99 Kaggle_Competition/MIT_TheAnalyticsEdge/31-Models/07_Full_Impute_Boruta_Features/AutoModel_V1.R')
AutoModel(dfTrain, 100)
debugSource('D:/11 DATA ANALYTICS/89 MIT_TheAnalyticsEdge/99 Kaggle_Competition/MIT_TheAnalyticsEdge/31-Models/07_Full_Impute_Boruta_Features/AutoModel_V1.R')
AutoModel(dfTrain, 100)
source('D:/11 DATA ANALYTICS/89 MIT_TheAnalyticsEdge/99 Kaggle_Competition/MIT_TheAnalyticsEdge/31-Models/07_Full_Impute_Boruta_Features/AutoModel_V1.R')
AutoModel(dfTrain, 100)
source('D:/11 DATA ANALYTICS/89 MIT_TheAnalyticsEdge/99 Kaggle_Competition/MIT_TheAnalyticsEdge/31-Models/07_Full_Impute_Boruta_Features/AutoModel_V2.R')
AutoModel(dfTrain, 100)
source('D:/11 DATA ANALYTICS/89 MIT_TheAnalyticsEdge/99 Kaggle_Competition/MIT_TheAnalyticsEdge/31-Models/07_Full_Impute_Boruta_Features/AutoModel_V2.R')
source('D:/11 DATA ANALYTICS/89 MIT_TheAnalyticsEdge/99 Kaggle_Competition/MIT_TheAnalyticsEdge/31-Models/07_Full_Impute_Boruta_Features/AutoModel_V2.R')
source('D:/11 DATA ANALYTICS/89 MIT_TheAnalyticsEdge/99 Kaggle_Competition/MIT_TheAnalyticsEdge/31-Models/07_Full_Impute_Boruta_Features/AutoModel_V2.R')
AutoModel(dfTrain, 100)
source('D:/11 DATA ANALYTICS/89 MIT_TheAnalyticsEdge/99 Kaggle_Competition/MIT_TheAnalyticsEdge/31-Models/07_Full_Impute_Boruta_Features/AutoModel_V3.R')
source('D:/11 DATA ANALYTICS/89 MIT_TheAnalyticsEdge/99 Kaggle_Competition/MIT_TheAnalyticsEdge/31-Models/07_Full_Impute_Boruta_Features/AutoModel_V3.R')
source('D:/11 DATA ANALYTICS/89 MIT_TheAnalyticsEdge/99 Kaggle_Competition/MIT_TheAnalyticsEdge/31-Models/07_Full_Impute_Boruta_Features/AutoModel_V3.R')
AutoModel(dfTrain, 100)
source('D:/11 DATA ANALYTICS/89 MIT_TheAnalyticsEdge/99 Kaggle_Competition/MIT_TheAnalyticsEdge/31-Models/07_Full_Impute_Boruta_Features/AutoModel_V4.R')
View(AutoModel)
AutoModel(dfTrain, 100)
source('D:/11 DATA ANALYTICS/89 MIT_TheAnalyticsEdge/99 Kaggle_Competition/MIT_TheAnalyticsEdge/31-Models/07_Full_Impute_Boruta_Features/AutoModel_V4.R')
AutoModel(dfTrain, 100)
source('D:/11 DATA ANALYTICS/89 MIT_TheAnalyticsEdge/99 Kaggle_Competition/MIT_TheAnalyticsEdge/31-Models/07_Full_Impute_Boruta_Features/AutoModel_V3.R')
AutoModel(dfTrain, 100)
View(AutoModel)
source('D:/11 DATA ANALYTICS/89 MIT_TheAnalyticsEdge/99 Kaggle_Competition/MIT_TheAnalyticsEdge/31-Models/07_Full_Impute_Boruta_Features/AutoModel_V3.R')
AutoModel(dfTrain, 100)
source('D:/11 DATA ANALYTICS/89 MIT_TheAnalyticsEdge/99 Kaggle_Competition/MIT_TheAnalyticsEdge/31-Models/07_Full_Impute_Boruta_Features/AutoModel_V4.R')
AutoModel(dfTrain, 100)
source('D:/11 DATA ANALYTICS/89 MIT_TheAnalyticsEdge/99 Kaggle_Competition/MIT_TheAnalyticsEdge/31-Models/07_Full_Impute_Boruta_Features/AutoModel_V5.R')
AutoModel(dfTrain, 100)
rm(rfModel)
rm(pred)
View(dfTrain)
library(rpart.plot)
library(randomForest)
library(caTools)
sum(dfTrain$YOB <= 1900)
sum(dfTrain$YOB > 2016)
sum(dfTrain$YOB ==2039)
glmBOR4 = glm(Party ~ Gender + Q115611 + Q113181 + Q109244 + Q106272 + Q98869 + Q9819, data = dfTrain, family = "binomial")
glmBOR4 = glm(Party ~ Gender + Q115611 + Q113181 + Q109244 + Q106272 + Q98869 + Q98197, data = dfTrain, family = "binomial")
cartBOR4 = rpart(Party ~ Gender + Q115611 + Q113181 + Q109244 + Q106272 + Q98869 + Q98197, data = dfTrain, method = "class")
?randomForest
rfBOR4 = randomForest(Party ~ Gender + Q115611 + Q113181 + Q109244 + Q106272 + Q98869 + Q98197, data = dfTrain, ntree = 1000)
rfBOR4 = randomForest(Party ~ Gender + Q115611 + Q113181 + Q109244 + Q106272 + Q98869 + Q98197, data = dfTrain, ntree = 1500)
table(dfTrain$Party, (predict(glmBOR4, type = "response"))>0.5)
(1877+1571)/nrow(dfTrain)
table(dfTrain$Party, predict(cartBOR4, type = "class")
)
(1894+1561)/nrow(dfTrain)
table(dfTrain$Party, predict(rfBOR4, type = "class"))
(1981+1488)/nrow(dfTrain)
rfBOR4 = randomForest(Party ~ Gender + Q115611 + Q113181 + Q109244 + Q106272 + Q98869 + Q98197, data = dfTrain, ntree = 2500)
table(dfTrain$Party, predict(rfBOR4, type = "class"))
rfBOR4 = randomForest(Party ~ Gender + Q115611 + Q113181 + Q109244 + Q106272 + Q98869 + Q98197, data = dfTrain, ntree = 1000)
table(dfTrain$Party, predict(rfBOR4, type = "class"))
(1990+1484)/nrow(dfTrain)
rfBOR4 = randomForest(Party ~ Gender + Q115611 + Q113181 + Q109244 + Q106272 + Q98869 + Q98197, data = dfTrain, ntree = 750)
table(dfTrain$Party, predict(rfBOR4, type = "class"))
summary(glmBOR4)
step(glmBOR4)
prp(cartBOR4)
varImpPlot(rfBOR4)
varImpPlot(rfBOR4)
Test <- read.csv("../../21-Imputed-Data/Test_Imputed_FULL2.csv")
PredKaggle = predict(cartBOR4, newdata = Test, type = "class")
dfKaggle = data.frame(USER_ID = Test$UserId, Predictions = as.character(PredKaggle))
View(dfKaggle)
write.csv(dfKaggle, "Submission_0611_02.csv", row.names = FALSE)
glmBOR43 = glm(Party ~ Gender + Q121699 + Q120379 + Q115611 + Q113181 + Q109244 + Q106272 + Q98869 + Q98197, data = dfTrain, family = "binomial")
cartBOR43 = rpart(Party ~ Gender + Q121699 + Q120379 + Q115611 + Q113181 + Q109244 + Q106272 + Q98869 + Q98197, data = dfTrain, method = "class")
rfBOR43 = randomForest(Party ~ Gender + Q121699 + Q120379 + Q115611 + Q113181 + Q109244 + Q106272 + Q98869 + Q98197, data = dfTrain, ntree = 1000)
table(dfTrain$Party, predict(glmBOR43, type = "response") > 0.5)
(1905+1559)/ nrow(dfTrain)
table(dfTrain$Party, predict(cartBOR43, type = "class"))
(1894+1561)/nrow(dfTrain)
table(dfTrain$Party, predict(rfBOR43, type = "class"))
(1890+1578)/nrow(dfTrain)
PredKaggle = predict(glmBOR43, newdata = Test, type = "response")
dfKaggle = data.frame(USER_ID = Test$UserId, Predictions = as.character(ifelse(PredKaggle < 0.5, "Democrat", "Republican")))
View(dfKaggle)
write.csv(dfKaggle, "Submission_0611_03.csv", row.names = FALSE)
glmBOR432 = glm(Party ~ Gender + Q121699 + Q120379 + Q115611 + Q113181 + Q109244 + Q106272 + Q101163 + Q98869 + Q98197, data = dfTrain, family = "binomial")
cartBOR432 = rpart(Party ~ Gender + Q121699 + Q120379 + Q115611 + Q113181 + Q109244 + Q106272 + Q101163 + Q98869 + Q98197, data = dfTrain, method = "class")
rfBOR432 = randomForest(Party ~ Gender + Q121699 + Q120379 + Q115611 + Q113181 + Q109244 + Q106272 + Q101163 + Q98869 + Q98197, data = dfTrain, ntree = 1000)
table(dfTrain$Party, predict(glmBOR432, type = "response") > 0.5)
(1809+1660)/norw(dfTrain)
(1809+1660)/nrow(dfTrain)
table(dfTrain$Party, predict(rfBOR432, type = "class"))
(1881+1565)/nrow(dfTrain)
table(dfTrain$Party, predict(cartBOR432, type = "class"))
(1894+1561)/nrow(dfTrain)
PredKaggle = predict(glmBOR432, newdata = Test, type = "response")
dfKaggle = data.frame(USER_ID = Test$UserId, Predictions = as.character(ifelse(PredKaggle < 0.5, "Democrat", "Republican")))
write.csv(dfKaggle, "Submission_0611_04.csv", row.names = FALSE)
glmBOR501_1 = glm(Party ~ Gender + Q121699 + Q120379 + Q120472 + Q118233 + Q115611 + Q113181 + Q109244 + Q106272 + Q98869 + Q98197, data = dfTrain, family = "binomial")
cartBOR501_1 = rpart(Party ~ Gender + Q121699 + Q120379 + Q120472 + Q118233 + Q115611 + Q113181 + Q109244 + Q106272 + Q98869 + Q98197, data = dfTrain, method = "class")
rfBOR501_1 = randomForest(Party ~ Gender + Q121699 + Q120379 + Q120472 + Q118233 + Q115611 + Q113181 + Q109244 + Q106272 + Q98869 + Q98197, data = dfTrain, ntree = 1000)
table(dfTrain$Party, predict(glmBOR501_1, type = "response") > 0.5)
(1892+1632)/nrow(dfTrain)
table(dfTrain$Party, predict(cartBOR501_1, type = "class"))
(1894+1561)/nrow(dfTrain)
table(dfTrain$Party, predict(rfBOR501_1, type = "class"))
(1880+1566)/nrow(dfTrain)
PredKaggle = predict(glmBOR501_1, newdata = Test, type = "response")
dfKaggle = data.frame(USER_ID = Test$UserId, Predictions = as.character(ifelse(PredKaggle < 0.5, "Democrat", "Republican")))
write.csv(dfKaggle, "Submission_0611_05.csv", row.names = FALSE)
View(dfKaggle)
prp(cartBOR432)
prp(cartBOR501_1)
glmBOR501_10 = glm(Party ~ Gender + Q121699 + Q120379 + Q120472 + Q118233 + Q116601 + Q115611 + Q113181 + Q109244 + Q106272 + Q101163 + Q98869 + Q98197, data = dfTrain, family = "binomial")
cartBOR501_10 = rpart(Party ~ Gender + Q121699 + Q120379 + Q120472 + Q118233 + Q116601 + Q115611 + Q113181 + Q109244 + Q106272 + Q101163 + Q98869 + Q98197, data = dfTrain, method = "class")
rfBOR501_10 = randomForest(Party ~ Gender + Q121699 + Q120379 + Q120472 + Q118233 + Q116601 + Q115611 + Q113181 + Q109244 + Q106272 + Q101163 + Q98869 + Q98197, data = dfTrain, ntree = 1000)
table(dfTrain$Party, predict(glmBOR501_10, type = "response") > 0.5)
(1900+1576)/norw(dfTrain)
(1900+1576)/nrow(dfTrain)
table(dfTrain$Party, predict(cartBOR501_10, type = "class"))
(1894+1561)/nrow(dfTrain)
table(dfTrain$Party, predict(rfBOR501_10, type = "class"))
(1925+1557)/nrow(dfTrain)
prp(cartBOR501_10)
PredKaggle = predict(rfBOR501_10, newdata = Test)
dfKaggle = data.frame(USER_ID = Test$UserId, Predictions = as.character(PredKaggle))
View(dfKaggle)
write.csv(dfKaggle, "Submission_0611_06.csv", row.names = FALSE)
install.packages("Party")
install.packages("party")
library(party)
ctBOR4 = cforest(Party ~ Gender + Q115611 + Q113181 + Q109244 + Q106272 + Q98869 + Q98197, data = dfTrain)
preidct(ctBOR4)
predict(ctBOR4)
predCTree <- predict(ctBOR4)
table(dfTrain$Party, predCTree)
(2050+1450)/nrow(dfTrain)
dfKaggle = predict(ctBOR4, newdata = Test)
PredKaggle = dfKaggle
dfKaggle = data.frame(USER_ID = Test$UserId, Predictions = as.character(PredKaggle))
View(dfKaggle)
write.csv(dfKaggle, "Submission_0611_09.csv", row.names = FALSE)
varimpAUC(ctBOR4)
