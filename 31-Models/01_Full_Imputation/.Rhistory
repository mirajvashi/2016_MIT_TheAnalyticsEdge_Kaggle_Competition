dfTrainImp <- read.csv("TrainingImputed_FULL.csv")
View(dfTrainImp)
dfTestImp <- read.csv("TestImputed_FULL.csv")
View(dfTestImp)
dfTrainImp$X = NULL
dfTestImp$X = NULL
dfTrainImp$Party
str(dfTrainImp)
library(caTools)
library(rpart)
library(rpart.plot)
library(randomForest)
## Model1: glm, Full Data, 70:30 split
set.seed(8191)
splt = sample.split(dfTrainImp$Party, SplitRatio = 0.7)
dfTrainSubset = subset(dfTrainImp, splt == TRUE)
dfTestSubset = subset(dfTrainImp, splt == FALSE)
glmModel1 = glm(Party ~ ., data = dfTrainSubset, family = "binomial")
predGLM1 = predict(glmModel1, newdata = dfTestSubset)
predGLM1
predGLM1 = predict(glmModel1, newdata = dfTestSubset, type = "response")
?predict.glm
predGLM1 = predict(glmModel1, newdata = dfTestSubset, type = "terms")
summary(predGLM1)
View(predGLM1)
predGLM1 = predict(glmModel1, newdata = dfTestSubset, type = "response")
table(dfTestSubset$Party, predGLM1)
table(dfTestSubset$Party, predGLM1>0.5)
(580+452)/nrow(dfTestSubset)
cartModel1 <- rpart(Party ~ ., data = dfTrainSubset, method = "class")
prp(cartModel1)
?predict.rpart
predCART1 <- predict(cartModel1, newdata = dfTestSubset, type = "class")
table(dfTestSubset$Party, predCART1)
(548+451)/nrow(dfTestSubset)
table(dfTrainSubset$Party, predict(cartModel1, type = "class"))
(1335+1115)/nrow(dfTrainSubset)
predCART1_KAGGLE = predict(cartModel1, newdata = dfTestImp, type = "class")
KaggleSubmission = data.frame(USER_ID = test$USER_ID, Prediction = predCART1_KAGGLE)
KaggleSubmission = data.frame(USER_ID = dfTestImp$USER_ID, Prediction = predCART1_KAGGLE)
predCART1
predCART1[1]
as.character(predCART1[1])
KaggleSubmission = data.frame(USER_ID = dfTestImp$USER_ID, Prediction = predCART1_KAGGLE)
Temp <- as.character(predCART1_KAGGLE)
Temp
rm(list = ls())
Training = read.csv("TrainingImputed_FULL.csv")
Test = read.csv("TestImputed_FULL.csv")
Training$X = NULL
Test$X = NULL
View(Test)
TestUserId = Test$UserId
TrainingUserId = Training$UserId
Test$UserId = NULL
Training$UserId = NULL
set.seed(13)
splt = sample.split(Training$Party, splt == TRUE)
library(caTools)
splt = sample.split(Training$Party, SplitRatio = 0.7)
dfTrain = subset(Training, splt == TRUE)
dfTest = subset(Training, splt == FALSE)
library(rpart)
library(rpart.plot)
cartModel1 = rpart(Party ~ ., data = dfTrain, method = "class")
prp(cartModel1)
predCARTM1 <- predict(cartModel1, newdata = dfTest, type = "class")
table(dfTest$Party, predCARTM1)
(620+430)/nrow(dfTest)
predCARTM1_Kaggle <- predict(cartModel1, newdata = Test, type = "class")
KagglePrediction = data.frame(USER_ID = TestUserId, Prediction = predCARTM1_Kaggle)
View(KagglePrediction)
KagglePrediction = data.frame(USER_ID = TestUserId, Predictions = predCARTM1_Kaggle)
write.csv(KagglePrediction, "Submission_0609_01.csv", row.names=FALSE)
############   TRYING RANDOM FOREST  ###################################33
library(randomForest)
rfModel1 <- randomForest(Party ~ ., data = dfTrain)
predRFM1 <- predict(rfModel1, newdata = dfTest, type = "class")
table(dfTest$Party, predRFM1)
(623+426)/nrow(dfTest)
predRFM1_Kaggle = predict(rfModel1, newdata = Test, type = "class")
KagglePrediction = data.frame(USER_ID = TestUserId, Predictions = predRFM1_Kaggle)
write.csv(KagglePrediction, "Submission_0609_02.csv", row.names=FALSE)
########################   TRYING GLM ON FULL DATA   ##########################
glmModel1 = glm(Party ~ ., data = dfTrain, family = "binomial")
summary(glmModel1)
predGLMM1 = predict(glmModel1, newdata = dfTest, type = "response")
predGLMM1_V = as.character(ifelse(predGLMM1 < 0.5, "Democrat", "Republican"))
table(dfTest$Party, predGLMM1_V)
(562+448)/nrow(dfTest)
library(ROCR)
predROCR <- prediction(predGLMM1, dfTest$Party)
perfROCR <- performance(predROCR, "tpr", "fpr")
plot(perfROCR, colorize = TRUE)
predGLMM1_V = as.character(ifelse(predGLMM1 < 0.8, "Democrat", "Republican"))
table(dfTest$Party, predGLMM1_V)
(877+20)/nrow(dfTest)
performance(perfROCR, "auc")
performance(predROCR, "auc")
summary(glmModel1)
summary(glmModel1)
glmModel2 <- glm(Party ~ YOB + Income + HouseholdStatus + Q123621 + Q121699 + Q120379 + Q120472 + Q118233 + Q116881 + Q116953 + Q116197 + Q115611 + Q113181 + Q109244 + Q105655 + Q102906 + Q102674 + Q101163 + Q100010 + Q99480, data = dfTrain, family = "binomial")
predGLMM2 <- predict(glmModel2, newdata = dfTest, type = "response")
predGLMM2_V <- as.character(ifelse(predGLMM2 < 0.5, "Democrat", "Republican"))
table(dfTest$Party, predGLMM2_V)
(558+459)/nrow(dfTest)
predROCR2 <- prediction(predGLMM2, dfTest$Party)
perfROCR2 <- performance(predROCR2, "tpr", "fpr")
plor(perfROCR2)
plot(perfROCR2)
perfROCR2_AUC <- performance(predROCR2, "auc")
perfROCR2_AUC
predGLMM2_Kaggle = predict(glmModel2, newdata = Test, type = "response")
predGLMM2_Kaggle_V = as.character(ifelse(predGLMM2_Kaggle < 0.5, "Democrat", "Republican"))
KagglePrediction = data.frame(USER_ID = TestUserId, Predictions = predGLMM2_Kaggle_V)
write.csv(KagglePrediction, "Submission_0609_03.csv", row.names=FALSE)
install.packages("ROCR")
